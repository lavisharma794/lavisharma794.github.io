{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, TemplateRef } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  count: number = 0;\n  list_item: string = '';\n  item_id: number;\n  showModal: boolean;\n  arr: any = [\n    /*{ id: 1, value: 'Lavi', completed: false },\n    { id: 2, value: 'Lokesh', completed: false },\n    { id: 3, value: 'Saket', completed: false },\n    { id: 3, value: 'MK', completed: false },*/\n  ];\n\n  updateList(v) {\n    this.arr.push({\n      id: this.count++,\n      value: v,\n      completed: false,\n    });\n    localStorage.setItem('locArr', JSON.stringify(this.arr));\n    //var getObj = JSON.parse(localStorage.getItem('locArr'));\n  }\n  strike(v) {\n    this.arr.forEach(function (vv, i, ar) {\n      console.log(vv.id);\n      if (vv.id == v) {\n        vv.completed = !vv.completed;\n      }\n    });\n    localStorage.setItem('locArr', JSON.stringify(this.arr));\n    //console.log(this.arr);\n  }\n  editItem(ids, newName) {\n    this.arr.forEach(function (vv, i, ar) {\n      if (vv.id == ids) {\n        vv.value = newName;\n      }\n    });\n    localStorage.setItem('locArr', JSON.stringify(this.arr));\n  }\n  deleteItem(id) {\n    var darr = this.arr.filter(function (vv, i, ar) {\n      if (vv.id == id) {\n        return false;\n      } else {\n        return true;\n      }\n    });\n    this.arr = darr;\n    localStorage.setItem('locArr', JSON.stringify(this.arr));\n  }\n  modalRef: BsModalRef;\n  constructor(private modalService: BsModalService) {}\n\n  openModal(template: TemplateRef<any>, vl, id) {\n    this.list_item = vl;\n    this.item_id = id;\n    this.modalRef = this.modalService.show(template);\n  }\n  ngOnInit() {\n    var getObj = JSON.parse(localStorage.getItem('locArr'));\n    if (getObj != '') {\n      this.arr = getObj;\n    }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-4\"></div>\n  <div class=\"col-4\">\n    <hr />\n    <p class=\"text-center text-success\" style=\"font-size: 1.25rem;\">\n      ***Hi welcome to Lavi's ToDoapp***\n    </p>\n    <hr />\n    <ul class=\"list-group mb-4\">\n      <li\n        class=\"list-group-item d-flex justify-content-between align-items-center\"\n        *ngFor=\"let item of arr\"\n      >\n        <span (click)=\"strike(item.id)\" [ngClass]=\"{ st: item.completed }\">\n          {{ item.value }}</span\n        >\n        <div>\n          <span\n            class=\"btn btn-primary\"\n            (click)=\"openModal(template, item.value, item.id)\"\n            >Edit</span\n          >\n          <span class=\"ml-3 btn btn-danger\" (click)=\"deleteItem(item.id)\"\n            >Delete</span\n          >\n        </div>\n      </li>\n    </ul>\n    <br />\n\n    <input\n      type=\"text\"\n      #f\n      class=\"form-control mr-4\"\n      placeholder=\"list item name\"\n      (keyup.enter)=\"updateList(f.value); f.value = ''\"\n    />\n    <button\n      class=\"btn btn-info mt-4 mr-5\"\n      (click)=\"updateList(f.value); f.value = ''\"\n    >\n      Add+\n    </button>\n  </div>\n  <div class=\"col-4\"></div>\n</div>\n<!--\n<button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(template)\">\n  Create template modal</button\n-->\n\n<ng-template #template>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Edit item list</h4>\n    <button\n      type=\"button\"\n      class=\"close pull-right\"\n      aria-label=\"Close\"\n      (click)=\"modalRef.hide()\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <input type=\"text\" #nval class=\"form-control\" value=\" {{ list_item }}\" />\n    <br />\n  </div>\n  <button\n    class=\"btn btn-info mt-4 mr-5 col-2 mb-4 ml-4\"\n    (click)=\"editItem(item_id, nval.value); modalRef.hide()\"\n  >\n    Save\n  </button>\n</ng-template>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n/*Ngx bootstrap modal */\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ModalModule.forRoot(),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}